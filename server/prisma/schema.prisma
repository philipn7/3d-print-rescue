generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int         @id @default(autoincrement())
  email    String      @unique
  password String
  name     String?
  posts    Post[]
  profile  Profile?
  liked    LikedPost[]
  comments Comment[]
}

model Post {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  title     String
  content   String?
  image     String
  published Boolean     @default(true)
  viewCount Int         @default(0)
  author    User?       @relation(fields: [authorId], references: [id])
  authorId  Int?
  liked     LikedPost[]
  comments  Comment[]
  tags      Tag[]
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  bio       String?
  location  String?
  avatar    String?
  userId    Int?     @unique
  user      User?    @relation(fields: [userId], references: [id])
}

model LikedPost {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  postId    Int?
  post      Post?    @relation(fields: [postId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model Tag {
  id     Int    @id @default(autoincrement())
  name   String
  post   Post?  @relation(fields: [postId], references: [id])
  postId Int?
}
